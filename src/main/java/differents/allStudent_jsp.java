/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.29
vc * Generated at: 2018-05-08 15:49:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 *//*

package differents;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class allStudent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final JspFactory _jspxFactory =
          JspFactory.getDefaultFactory();

  private static java.util.Map<String,Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<String,Long>(2);
    _jspx_dependants.put("/WEB-INF/classes/META-INF/c.tld", Long.valueOf(1525628930854L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1525726733023L));
  }

  private static final java.util.Set<String> _jspx_imports_packages;

  private static final java.util.Set<String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<String,Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final HttpServletRequest request, final HttpServletResponse response)
      throws java.io.IOException, ServletException {

    final String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final PageContext pageContext;
    HttpSession session = null;
    final ServletContext application;
    final ServletConfig config;
    JspWriter out = null;
    final Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<a href=\"");
      out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", String.class, (PageContext)_jspx_page_context, null));
      out.write("allStudents\">\r\n");
      out.write("    All Student\r\n");
      out.write("</a>\r\n");
      out.write("<a href=\"");
      out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", String.class, (PageContext)_jspx_page_context, null));
      out.write("test\">\r\n");
      out.write("    Add Student\r\n");
      out.write("</a>\r\n");
      out.write("<a href=\"");
      out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", String.class, (PageContext)_jspx_page_context, null));
      out.write("addFacultet\">\r\n");
      out.write("    Add Facultet\r\n");
      out.write("</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<center><h1>All Students</h1></center>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th> Name</th>\r\n");
      out.write("        <th> Surname</th>\r\n");
      out.write("        <th> StudentGroup</th>\r\n");
      out.write("        <th> Facultet</th>\r\n");
      out.write("        <th> Av.Score</th>\r\n");
      out.write("        <th> Number</th>\r\n");
      out.write("        <th> Delete</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      java.util.List student = null;
      student = (java.util.List) _jspx_page_context.getAttribute("student", PageContext.REQUEST_SCOPE);
      if (student == null){
        throw new InstantiationException("bean student not found within scope");
      }
      out.write("\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /allStudent.jsp(31,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/allStudent.jsp(31,4) '${student}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${student}",Object.class)).getValue(_jspx_page_context.getELContext()));
      // /allStudent.jsp(31,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("stud");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        <tr>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.name}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("                            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.surname}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.group}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.facultet}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.avscore}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                    ");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.number}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("            <a href=\"");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", String.class, (PageContext)_jspx_page_context, null));
            out.write("deleteStudent?student=");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.id}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                delete\r\n");
            out.write("            </a>\r\n");
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("            <th>\r\n");
            out.write("                <a href=\"");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", String.class, (PageContext)_jspx_page_context, null));
            out.write("editStudent?studentID=");
            out.write((String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stud.id}", String.class, (PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                    edit\r\n");
            out.write("                </a>\r\n");
            out.write("\r\n");
            out.write("            </th>\r\n");
            out.write("        </tr>\r\n");
            out.write("        <br>\r\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
*/
